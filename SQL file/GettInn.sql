-- MySQL Script generated by MySQL Workbench
-- Tue Jul  3 19:52:10 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema GettInn
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema GettInn
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GettInn` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `GettInn` ;

-- -----------------------------------------------------
-- Table `GettInn`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `linkedin_education` VARCHAR(255) NULL,
  `linkedin_experience` VARCHAR(255) NULL,
  `linkedin_profile_link` VARCHAR(255) NULL,
  `total_earnings` DOUBLE NULL,
  `total_amount_spent` DOUBLE NULL,
  `account_number` INT(20) NULL,
  `ifsc_code` VARCHAR(16) NULL,
  `auth_token` VARCHAR(255) NULL,
  `auth_expiry` VARCHAR(32) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`admission_sop_doc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`admission_sop_doc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NULL,
  `university` VARCHAR(255) NULL,
  `country` VARCHAR(64) NULL,
  `department` VARCHAR(255) NULL,
  `degree` VARCHAR(255) NULL,
  `price_band` DOUBLE NULL,
  `total_sales` INT NULL,
  `year_of_admission` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `owner_id_UNIQUE` (`owner_id` ASC),
  CONSTRAINT `owner_id`
    FOREIGN KEY (`owner_id`)
    REFERENCES `GettInn`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`fellowship_sop_doc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`fellowship_sop_doc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NULL,
  `name` VARCHAR(255) NULL,
  `country` VARCHAR(64) NULL,
  `price_band` DOUBLE NULL,
  `total_sales` INT NULL,
  `year_of_admission` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `owner_id_UNIQUE` (`owner_id` ASC),
  CONSTRAINT `owner_id2`
    FOREIGN KEY (`owner_id`)
    REFERENCES `GettInn`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`doc_content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`doc_content` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `doc_id` INT NULL,
  `sop_question` LONGTEXT NULL,
  `sop_answer` LONGTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `doc_id_UNIQUE` (`doc_id` ASC),
  CONSTRAINT `doc_id`
    FOREIGN KEY (`doc_id`)
    REFERENCES `GettInn`.`admission_sop_doc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `doc_id2`
    FOREIGN KEY (`doc_id`)
    REFERENCES `GettInn`.`fellowship_sop_doc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`transactions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `doc_id` INT NULL,
  `buyer_id` INT NULL,
  `datetime` VARCHAR(255) NULL,
  `payment_reference_id` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `doc_id_UNIQUE` (`doc_id` ASC),
  UNIQUE INDEX `buyer_id_UNIQUE` (`buyer_id` ASC),
  CONSTRAINT `doc_id8`
    FOREIGN KEY (`doc_id`)
    REFERENCES `GettInn`.`admission_sop_doc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `doc_id9`
    FOREIGN KEY (`doc_id`)
    REFERENCES `GettInn`.`fellowship_sop_doc` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `buyer_id`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `GettInn`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`countries` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`universities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`universities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NULL,
  `country_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `country_id_idx` (`country_id` ASC),
  CONSTRAINT `country_id`
    FOREIGN KEY (`country_id`)
    REFERENCES `GettInn`.`countries` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`degrees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`degrees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GettInn`.`price_band`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GettInn`.`price_band` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` DOUBLE NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
